# Script d'installation du service Windows pour CryptUSBee
param(
    [switch]$Install,
    [switch]$Uninstall,
    [switch]$Start,
    [switch]$Stop,
    [string]$ServiceName = "CryptUSBeeDaemon"
)

# V√©rification des privil√®ges administrateur
if (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Error "Ce script doit √™tre ex√©cut√© en tant qu'administrateur."
    exit 1
}

$ServiceDisplayName = "CryptUSBee Daemon"
$ServiceDescription = "Service de surveillance USB pour l'authentification CryptUSBee"
$ServicePath = Join-Path $PSScriptRoot "..\cryptusbee_daemon.exe"
$ServiceStartMode = "Automatic"

function Install-CryptUSBeeService {
    Write-Host "üîß Installation du service CryptUSBee..." -ForegroundColor Green
    
    try {
        # V√©rification que l'ex√©cutable existe
        if (-not (Test-Path $ServicePath)) {
            Write-Error "L'ex√©cutable du service n'a pas √©t√© trouv√© : $ServicePath"
            return $false
        }
        
        # Arr√™t du service s'il existe d√©j√†
        $existingService = Get-Service -Name $ServiceName -ErrorAction SilentlyContinue
        if ($existingService) {
            Write-Host "‚èπÔ∏è Arr√™t du service existant..." -ForegroundColor Yellow
            Stop-Service -Name $ServiceName -Force -ErrorAction SilentlyContinue
            
            Write-Host "üóëÔ∏è Suppression du service existant..." -ForegroundColor Yellow
            sc.exe delete $ServiceName
            Start-Sleep -Seconds 2
        }
        
        # Cr√©ation du service
        Write-Host "üì¶ Cr√©ation du nouveau service..." -ForegroundColor Green
        New-Service -Name $ServiceName `
                   -DisplayName $ServiceDisplayName `
                   -Description $ServiceDescription `
                   -BinaryPathName $ServicePath `
                   -StartupType $ServiceStartMode `
                   -Credential (Get-Credential -Message "Entrez les identifiants pour ex√©cuter le service")
        
        # Configuration des param√®tres de r√©cup√©ration
        Write-Host "‚öôÔ∏è Configuration des param√®tres de r√©cup√©ration..." -ForegroundColor Green
        sc.exe failure $ServiceName reset=86400 actions=restart/5000/restart/10000/restart/20000
        
        Write-Host "‚úÖ Service CryptUSBee install√© avec succ√®s!" -ForegroundColor Green
        return $true
        
    } catch {
        Write-Error "‚ùå Erreur lors de l'installation du service : $($_.Exception.Message)"
        return $false
    }
}

function Uninstall-CryptUSBeeService {
    Write-Host "üóëÔ∏è D√©sinstallation du service CryptUSBee..." -ForegroundColor Yellow
    
    try {
        $service = Get-Service -Name $ServiceName -ErrorAction SilentlyContinue
        if ($service) {
            # Arr√™t du service
            if ($service.Status -eq "Running") {
                Write-Host "‚èπÔ∏è Arr√™t du service..." -ForegroundColor Yellow
                Stop-Service -Name $ServiceName -Force
            }
            
            # Suppression du service
            Write-Host "üóëÔ∏è Suppression du service..." -ForegroundColor Yellow
            sc.exe delete $ServiceName
            
            Write-Host "‚úÖ Service CryptUSBee d√©sinstall√© avec succ√®s!" -ForegroundColor Green
            return $true
        } else {
            Write-Host "‚ö†Ô∏è Le service CryptUSBee n'est pas install√©." -ForegroundColor Yellow
            return $true
        }
        
    } catch {
        Write-Error "‚ùå Erreur lors de la d√©sinstallation : $($_.Exception.Message)"
        return $false
    }
}

function Start-CryptUSBeeService {
    Write-Host "üöÄ D√©marrage du service CryptUSBee..." -ForegroundColor Green
    
    try {
        Start-Service -Name $ServiceName
        Write-Host "‚úÖ Service CryptUSBee d√©marr√© avec succ√®s!" -ForegroundColor Green
        return $true
    } catch {
        Write-Error "‚ùå Erreur lors du d√©marrage : $($_.Exception.Message)"
        return $false
    }
}

function Stop-CryptUSBeeService {
    Write-Host "‚èπÔ∏è Arr√™t du service CryptUSBee..." -ForegroundColor Yellow
    
    try {
        Stop-Service -Name $ServiceName -Force
        Write-Host "‚úÖ Service CryptUSBee arr√™t√© avec succ√®s!" -ForegroundColor Green
        return $true
    } catch {
        Write-Error "‚ùå Erreur lors de l'arr√™t : $($_.Exception.Message)"
        return $false
    }
}

function Show-ServiceStatus {
    Write-Host "üìä Statut du service CryptUSBee:" -ForegroundColor Cyan
    
    $service = Get-Service -Name $ServiceName -ErrorAction SilentlyContinue
    if ($service) {
        Write-Host "   Nom: $($service.Name)" -ForegroundColor White
        Write-Host "   Statut: $($service.Status)" -ForegroundColor $(if ($service.Status -eq "Running") { "Green" } else { "Red" })
        Write-Host "   Type de d√©marrage: $($service.StartType)" -ForegroundColor White
    } else {
        Write-Host "   ‚ùå Service non install√©" -ForegroundColor Red
    }
}

# Configuration du pare-feu
function Configure-Firewall {
    Write-Host "üî• Configuration du pare-feu Windows..." -ForegroundColor Cyan
    
    try {
        # R√®gle pour le port WebSocket (8765 par d√©faut)
        $ruleName = "CryptUSBee WebSocket"
        $existingRule = Get-NetFirewallRule -DisplayName $ruleName -ErrorAction SilentlyContinue
        
        if ($existingRule) {
            Write-Host "‚ö†Ô∏è R√®gle de pare-feu existante trouv√©e, suppression..." -ForegroundColor Yellow
            Remove-NetFirewallRule -DisplayName $ruleName
        }
        
        Write-Host "üî• Cr√©ation de la r√®gle de pare-feu..." -ForegroundColor Green
        New-NetFirewallRule -DisplayName $ruleName `
                           -Direction Inbound `
                           -Protocol TCP `
                           -LocalPort 8765 `
                           -Action Allow `
                           -Profile Domain,Private `
                           -Description "Autoriser les connexions WebSocket pour CryptUSBee"
        
        Write-Host "‚úÖ Pare-feu configur√© avec succ√®s!" -ForegroundColor Green
        
    } catch {
        Write-Warning "‚ö†Ô∏è Impossible de configurer le pare-feu : $($_.Exception.Message)"
    }
}

# Ex√©cution des actions
Write-Host "üîê CryptUSBee Service Manager" -ForegroundColor Cyan
Write-Host "================================" -ForegroundColor Cyan

if ($Install) {
    if (Install-CryptUSBeeService) {
        Configure-Firewall
        Start-CryptUSBeeService
    }
} elseif ($Uninstall) {
    Uninstall-CryptUSBeeService
} elseif ($Start) {
    Start-CryptUSBeeService
} elseif ($Stop) {
    Stop-CryptUSBeeService
} else {
    Write-Host "Usage:"
    Write-Host "  .\install_service.ps1 -Install    # Installer et d√©marrer le service"
    Write-Host "  .\install_service.ps1 -Uninstall  # D√©sinstaller le service"
    Write-Host "  .\install_service.ps1 -Start      # D√©marrer le service"
    Write-Host "  .\install_service.ps1 -Stop       # Arr√™ter le service"
    Write-Host ""
}

Show-ServiceStatus
